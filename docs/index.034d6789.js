function t(t,e,n){if(!e.has(t))throw new TypeError("attempted to "+n+" private field on non-instance");return e.get(t)}function e(t,e){return e.get?e.get.call(t):e.value}function n(n,s){return e(n,t(n,s,"get"))}function s(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function i(t,e,n){s(t,e),e.set(t,n)}function a(t,e,n){if(e.set)e.set.call(t,n);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=n}}function r(e,n,s){return a(e,t(e,n,"set"),s),s}function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var u=new WeakMap,o=new WeakMap,h=new WeakMap,p=new WeakMap;var c=class{set _inputs(t=[]){r(this,o,t)}get _inputs(){return n(this,o)}get _eventsInput(){return n(this,u)}set _eventsInput(t=[]){r(this,u,t)}get _searchInputPattern(){return n(this,p)}set _searchInputPattern(t){r(this,p,t)}get maskField(){return n(this,h)}install(){this._inputs.length||(this._inputs=document.querySelectorAll(this._searchInputPattern)),this._inputs.length&&this.subscribeEventsOnTheInput()}getInputNumbersValue(t){return t.value.replace(this.maskField,"")}handlerKeydown(t){const e=t.target.value.replace(this.maskField,"");8===t.keyCode&&1===e.length&&(t.target.value="")}handlerFocus(t){t.target.placeholder="+7 (999) 999-99-99"}handlerBlur(t){t.target.placeholder="Телефон"}handlerInput(t){const e=t.target;let n=this.getInputNumbersValue(e);const s=e.selectionStart;let i="";if(!n)return e.value="";if(e.value.length==s){if(["7","8","9"].includes(n[0])){"9"===n[0]&&(n=`7${n}`);let t="8"===n[0]?"8":"+7";i=e.value=`${t} `,n.length>1&&(i+=`(${n.substring(1,4)}`),n.length>=5&&(i+=`) ${n.substring(4,7)}`),n.length>=8&&(i+=`-${n.substring(7,9)}`),n.length>=10&&(i+=`-${n.substring(9,11)}`)}else i=`+${n.substring(0,16)}`;e.value=i}else t.data&&this.maskField.test(t.data)&&(e.value=n)}handlerPaste(t){const e=t.target,n=getInputNumbersValue(e),s=t.clipboardData||window.clipboardData;if(s){const t=s.getData("Text");if(this.maskField.test(t))return void(e.value=n)}}getMethodAtInstance(t){const e=`handler${t.slice(0,1).toUpperCase()}${t.slice(1)}`;return!!this[e]&&this[e]}subscribeEventsOnTheInput(){for(const t of this._inputs){if("tel"!==t.type)return;for(const e of this._eventsInput){const n=this.getMethodAtInstance(e);"function"==typeof n&&t.addEventListener(e,n.bind(this),!1)}}}constructor(t={}){i(this,u,{writable:!0,value:["focus","blur","keydown","input","paste"]}),i(this,o,{writable:!0,value:[]}),i(this,h,{writable:!0,value:/\D/g}),i(this,p,{writable:!0,value:"input[data-tel-input]"}),l(this,"_libName","Input Phone Mask"),l(this,"_version","1.0.0"),this.isInitInstance=!Object.prototype.hasOwnProperty.call(t,"init")||t.init,this._eventsInput=Object.prototype.hasOwnProperty.call(t,"events")?t.events:this._eventsInput,this._inputs=Object.prototype.hasOwnProperty.call(t,"fields")?t.fields:this._inputs,this._searchInputPattern=Object.prototype.hasOwnProperty.call(t,"patternNodeInput")?t.patternNodeInput:this._searchInputPattern,this.isInitInstance&&this.install()}};document.addEventListener("DOMContentLoaded",(function(){const t=new c;console.info("Install to lib",t._libName),document.querySelector("input").focus()}));
//# sourceMappingURL=index.034d6789.js.map
