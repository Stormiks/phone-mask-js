function t(t){return t&&t.__esModule?t.default:t}var e,n={};e=n=function(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t},n.default=e,n.__esModule=true;var s,a,r=t(n),i={},u={};a=u=function(t,e){return e.get?e.get.call(t):e.value},u.default=a,u.__esModule=true;var l,o=u,c={};l=c=function(t,e,n){if(!e.has(t))throw new TypeError("attempted to "+n+" private field on non-instance");return e.get(t)},c.default=l,c.__esModule=true;var h=c;s=i=function(t,e){var n=h(t,e,"get");return o(t,n)},i.default=s,i.__esModule=true;var p,d,v=t(i),f={},g={};d=g=function(t,e,n){if(e.set)e.set.call(t,n);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=n}},g.default=d,g.__esModule=true;var _=g,b=c;p=f=function(t,e,n){var s=b(t,e,"set");return _(t,s,n),n},f.default=p,f.__esModule=true;var I=t(f);var w=new WeakMap,y=new WeakMap,M=new WeakMap,m=new WeakMap;export default class k{constructor(t={}){w.set(this,{writable:!0,value:["focus","blur","keydown","input","paste"]}),y.set(this,{writable:!0,value:[]}),M.set(this,{writable:!0,value:/\D/g}),m.set(this,{writable:!0,value:"input[data-tel-input]"}),r(this,"_libName","Input Phone Mask"),r(this,"_version","1.0.0"),this.isInitInstance=!Object.prototype.hasOwnProperty.call(t,"init")||t.init,this._eventsInput=Object.prototype.hasOwnProperty.call(t,"events")?t.events:this._eventsInput,this._inputs=Object.prototype.hasOwnProperty.call(t,"fields")?t.fields:this._inputs,this._searchInputPattern=Object.prototype.hasOwnProperty.call(t,"patternNodeInpit")?t.patternNodeInpit:this._searchInputPattern,this.isInitInstance&&this.install()}set _inputs(t=[]){I(this,y,t)}get _inputs(){return v(this,y)}get _eventsInput(){return v(this,w)}set _eventsInput(t=[]){I(this,w,t)}get _searchInputPattern(){return v(this,m)}set _searchInputPattern(t){I(this,m,t)}get maskField(){return v(this,M)}install(){this._inputs.length||(this._inputs=document.querySelectorAll(this._searchInputPattern)),this._inputs.length&&this.subscribeEventsOnTheInput()}getInputNumbersValue(t){return t.value.replace(this.maskField,"")}handlerKeydown(t){const e=t.target.value.replace(this.maskField,"");8===t.keyCode&&1===e.length&&(t.target.value="")}handlerFocus(t){t.target.placeholder="+7 (999) 999-99-99"}handlerBlur(t){t.target.placeholder="Телефон"}handlerInput(t){const e=t.target;let n=this.getInputNumbersValue(e);const s=e.selectionStart;let a="";if(!n)return e.value="";if(e.value.length==s){if(["7","8","9"].includes(n[0])){"9"===n[0]&&(n="7".concat(n));let t="8"===n[0]?"8":"+7";a=e.value="".concat(t," "),n.length>1&&(a+="(".concat(n.substring(1,4))),n.length>=5&&(a+=") ".concat(n.substring(4,7))),n.length>=8&&(a+="-".concat(n.substring(7,9))),n.length>=10&&(a+="-".concat(n.substring(9,11)))}else a="+".concat(n.substring(0,16));e.value=a}else t.data&&this.maskField.test(t.data)&&(e.value=n)}handlerPaste(t){const e=t.target,n=getInputNumbersValue(e),s=t.clipboardData||window.clipboardData;if(s){const t=s.getData("Text");if(this.maskField.test(t))return void(e.value=n)}}getMethodAtInstance(t){const e=t.slice(0,1).toUpperCase(),n=t.slice(1),s="handler".concat(e).concat(n);return!!this[s]&&this[s]}subscribeEventsOnTheInput(){for(const t of this._inputs){if("tel"!==t.type)return;for(const e of this._eventsInput){const n=this.getMethodAtInstance(e);"function"==typeof n&&t.addEventListener(e,n.bind(this),!1)}}}}
//# sourceMappingURL=index.db694485.js.map
