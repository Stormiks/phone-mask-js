{"mappings":"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","sources":["node_modules/@swc/helpers/src/_class_extract_field_descriptor.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_get.mjs","node_modules/@swc/helpers/src/_class_private_field_get.mjs","node_modules/@swc/helpers/src/_check_private_redeclaration.mjs","node_modules/@swc/helpers/src/_class_private_field_init.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_set.mjs","node_modules/@swc/helpers/src/_class_private_field_set.mjs","node_modules/@swc/helpers/src/_define_property.mjs","src/plugin/index.js","src/script.js"],"sourcesContent":["export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\n","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get.mjs';\n\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration.mjs\";\n\nexport default function _classPrivateFieldInit(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      // This should only throw in strict mode, but class bodies are\n      // always strict and private fields can only be used inside\n      // class bodies.\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorSet from './_class_apply_descriptor_set.mjs';\n\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","const appName = \"Input Phone Mask\"\nconst version = \"1.0.0\"\n\nclass InputTelephon {\n    #_eventsInput = ['focus', 'blur', 'keydown', 'input', 'paste']\n    #_inputs = []\n    #_regExpMask = /\\D/g\n    #_searchInputPattern = 'input[data-tel-input]'\n    _libName = appName\n    _version = version\n\n    constructor(options = {}) {\n        this.isInitInstance = Object.prototype.hasOwnProperty.call(options, 'init') ? options.init : true\n        this._eventsInput = Object.prototype.hasOwnProperty.call(options, 'events') ? options.events : this._eventsInput\n        this._inputs = Object.prototype.hasOwnProperty.call(options, 'fields') ? options.fields : this._inputs\n        this._searchInputPattern = Object.prototype.hasOwnProperty.call(options, 'patternNodeInput') ? options.patternNodeInput : this._searchInputPattern\n\n        if (this.isInitInstance)\n            this.install()\n    }\n\n    set _inputs($nodes = []) {\n        this.#_inputs = $nodes\n    }\n\n    get _inputs() {\n        return this.#_inputs\n    }\n\n    get _eventsInput() {\n        return this.#_eventsInput\n    }\n\n    set _eventsInput(arr = []) {\n        this.#_eventsInput = arr\n    }\n\n    get _searchInputPattern() {\n        return this.#_searchInputPattern\n    }\n\n    set _searchInputPattern(patternStr) {\n        this.#_searchInputPattern = patternStr\n    }\n\n    get maskField() {\n        return this.#_regExpMask\n    }\n\n    install() {\n        if (!this._inputs.length) {\n            this._inputs = document.querySelectorAll(this._searchInputPattern)\n        }\n\n        if (this._inputs.length)\n            this.subscribeEventsOnTheInput()\n    }\n\n    getInputNumbersValue($field) {\n        return $field.value.replace(this.maskField, '');\n    }\n\n    handlerKeydown(e) {\n        const $fieldValue = e.target.value.replace(this.maskField, '');\n\n        if (e.keyCode === 8 && $fieldValue.length === 1) {\n            e.target.value = \"\";\n        }\n    }\n\n    handlerFocus(e) {\n        const $field = e.target;\n\n        $field.placeholder = '+7 (999) 999-99-99'\n    }\n\n    handlerBlur(e) {\n        const $field = e.target;\n\n        $field.placeholder = 'Телефон'\n    }\n\n    handlerInput(e) {\n        const $field = e.target;\n        let inputNumbersValue = this.getInputNumbersValue($field);\n        const selectionStart = $field.selectionStart;\n        let formattedInputValue = \"\";\n\n        if (!inputNumbersValue) return $field.value = \"\";\n\n        if ($field.value.length != selectionStart) {\n            if (e.data && this.maskField.test(e.data)) {\n                $field.value = inputNumbersValue;\n            }\n            return;\n        }\n\n\n        if ([\"7\", \"8\", \"9\"].includes(inputNumbersValue[0])) {\n            if (inputNumbersValue[0] === \"9\") inputNumbersValue = `7${inputNumbersValue}`;\n\n            let firstSymbols = (inputNumbersValue[0] === \"8\") ? \"8\" : \"+7\";\n\n            formattedInputValue = $field.value = `${firstSymbols} `;\n\n            if (inputNumbersValue.length > 1) {\n                formattedInputValue += `(${inputNumbersValue.substring(1, 4)}`;\n            }\n            if (inputNumbersValue.length >= 5) {\n                formattedInputValue += `) ${inputNumbersValue.substring(4, 7)}`;\n            }\n            if (inputNumbersValue.length >= 8) {\n                formattedInputValue +=`-${inputNumbersValue.substring(7, 9)}`;\n            }\n            if (inputNumbersValue.length >= 10) {\n                formattedInputValue += `-${inputNumbersValue.substring(9, 11)}`;\n            }\n        } else {\n            formattedInputValue = `+${inputNumbersValue.substring(0, 16)}`;\n        }\n\n        $field.value = formattedInputValue;\n    }\n\n    handlerPaste(e) {\n        const $filed = e.target;\n        const inputNumbersValue = getInputNumbersValue($filed);\n        const pasted = e.clipboardData || window.clipboardData;\n\n        if (pasted) {\n            const pastedText = pasted.getData('Text');\n\n            if (this.maskField.test(pastedText)) {\n                $filed.value = inputNumbersValue;\n                return;\n            }\n        }\n    }\n\n    getMethodAtInstance(nameEvent) {\n        const formatFirstSymbolOfStr = nameEvent.slice(0,1).toUpperCase()\n        const restOfTheLine = nameEvent.slice(1)\n        const nameMethodAtClass = `handler${formatFirstSymbolOfStr}${restOfTheLine}`\n\n        if (!this[nameMethodAtClass]) {\n            return false\n        } else {\n            return this[nameMethodAtClass]\n        }\n    }\n\n    subscribeEventsOnTheInput() {\n        for (const $input of this._inputs) {\n            if ($input.type !== 'tel') return\n\n            for (const event of this._eventsInput) {\n                const handlerMethod = this.getMethodAtInstance(event)\n\n                if (typeof handlerMethod === 'function')\n                    $input.addEventListener(event, handlerMethod.bind(this), false)\n            }\n        }\n    }\n}\n\n\nexport default InputTelephon\n","import instInputMask from './plugin/index.js'\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n    const InputMask = new instInputMask();\n    console.info('Install to lib', InputMask._libName)\n    document.querySelector('input').focus();\n})"],"names":["$0c78a6cb34db1b08$export$2e2bcd8739ae039","receiver","privateMap","action","has","TypeError","get","$b02592ac2b7c44d6$export$2e2bcd8739ae039","descriptor","call","value","$6271e133699b8849$export$2e2bcd8739ae039","$da16883749a85253$export$2e2bcd8739ae039","obj","privateCollection","$ef5c0174c7815445$export$2e2bcd8739ae039","set","$030fc27fe9591e7e$export$2e2bcd8739ae039","writable","$9c0bae82e7dd2608$export$2e2bcd8739ae039","$95dc7c81819900e8$export$2e2bcd8739ae039","key","Object","defineProperty","enumerable","configurable","$4621c2ff041e3ea2$var$__eventsInput","WeakMap","$4621c2ff041e3ea2$var$__inputs","$4621c2ff041e3ea2$var$__regExpMask","$4621c2ff041e3ea2$var$__searchInputPattern","$4621c2ff041e3ea2$export$2e2bcd8739ae039","_inputs","$nodes","this","_eventsInput","arr","_searchInputPattern","patternStr","maskField","_regExpMask","install","length","document","querySelectorAll","subscribeEventsOnTheInput","getInputNumbersValue","$field","replace","handlerKeydown","e","$fieldValue","target","keyCode","handlerFocus","placeholder","handlerBlur","handlerInput","inputNumbersValue","selectionStart","formattedInputValue","includes","firstSymbols","substring","data","test","handlerPaste","$filed","pasted","clipboardData","window","pastedText","getData","getMethodAtInstance","nameEvent","nameMethodAtClass","slice","toUpperCase","$input","type","event","handlerMethod","addEventListener","bind","constructor","options","_libName","_version","isInitInstance","prototype","hasOwnProperty","init","events","fields","patternNodeInput","InputMask","instInputMask","console","info","querySelector","focus"],"version":3,"file":"index.034d6789.js.map"}